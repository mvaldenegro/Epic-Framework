Coding standards for the Epic Framework

- Always use C++ casts (static_cast, const_cast, dynamic_cast).
- Classes and namespaces are always in PascalCase.
- Methods, functions, variables are always in camelCase.
- Don't always prefer STL classes/methods if they are not 100% reliable (on other compilers, Videogame consoles, etc).
- But offer interfaces with STL classes.
- Always put classes and functions in a namespace.
- Don't pollute the global namespace inside headers.
- Prefer forward declarations instead of including a header inside another header file.
- Prefer C++0x constructs which are in the draft standards, such as nullptr, enum classes. Provide code to emulate them in older compilers.
- Don't use exceptions.
- Always pass/return reference-counted or ownership-based smart pointer (Pointer<T> or SharedPointer<T>).
- Always document classes and methods with doxygen-style comments.